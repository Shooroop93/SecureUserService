services:
  db:
    image: postgres:17.4
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: docker.io/bitnami/redis:7.4
    restart: always
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_AOF_ENABLED=yes
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    restart: always
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      KAFKA_OPTS: "-Dzookeeper.4lw.commands.whitelist=ruok,conf,mntr,stat"
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_HOURS: 168 # 7 дней хранения логов
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - backend

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  kafka_data:
    driver: local
  zookeeper_data:
    driver: local

networks:
  backend:
    driver: bridge